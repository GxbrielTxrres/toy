/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/chromatic_core.glb --transform --simplify
Author: Tycho Magnetic Anomaly (https://sketchfab.com/Tycho_Magnetic_Anomaly)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/chromatic-core-a9f0368eb94c475baae30579b704eed8
Title: Chromatic Core
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export function Model(props) {
	const group = useRef();
	const { nodes, materials, animations } = useGLTF(
		"/chromatic_core-transformed.glb",
	);
	Object.values(materials).forEach((mat) => (mat.toneMapped = false));
	const { ref, actions, names } = useAnimations(animations, group);

	useEffect(() => {
		actions[names[0]].play();
	}, []);

	return (
		<group ref={group} {...props} dispose={null}>
			<group name="Sketchfab_Scene">
				<group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
					<group name="root">
						<group
							name="GLTF_SceneRootNode"
							rotation={[Math.PI / 2, 0, 0]}
						>
							<group name="Sphere_0">
								<mesh
									name="Object_4"
									geometry={nodes.Object_4.geometry}
									material={materials.material}
								/>
							</group>
							<group name="Torus_1" scale={0.42}>
								<mesh
									name="Object_6"
									geometry={nodes.Object_6.geometry}
									material={materials.material_1}
								/>
							</group>
							<group
								name="Sphere001_2"
								rotation={[-Math.PI, 0, 0]}
								scale={[-0.27, 0.27, 0.27]}
							>
								<mesh
									name="Object_8"
									geometry={nodes.Object_8.geometry}
									material={materials.material_2}
								/>
							</group>
							<group name="Sphere003_3" scale={1.24}>
								<mesh
									name="Object_10"
									geometry={nodes.Object_10.geometry}
									material={materials.material_3}
								/>
							</group>
							<group name="Sphere002_4" scale={1.66}>
								<mesh
									name="Object_12"
									geometry={nodes.Object_12.geometry}
									material={materials.material_4}
								/>
							</group>
						</group>
					</group>
				</group>
			</group>
		</group>
	);
}

useGLTF.preload("/chromatic_core-transformed.glb");
